@using TrucksTakov.Models.Order;
@model IEnumerable<TrucksTakov.Models.Truck.TruckIndexVM>

@{
    ViewData["Title"] = "Trucks";
}

<center><h1>Tank</h1></center>
@if ((this.User.Identity.IsAuthenticated) && (this.User.IsInRole("Administrator")))
{
    <p>
        <a asp-action="Create">Create New</a>
    </p>
}



<form asp-controller="Truck" asp-action="Index" method="get">

    <p>
        Manufacturer: <input type="text" name="SearchStringManufacturerName" />
        Category: <input type="text" name="SearchStringCategoryName" />


        <input type="submit" value="Filter" />

    </p>
</form>
<div class="row">
    @foreach (var item in Model)
    {
        <div class="col-md-4">
            <div class="card mb-4 shadow-sm">
                <img src="@Html.DisplayFor(modelItem => item.Image)" class="card-img-top" alt="Image" />
                <div class="card-body">
                    <h5 class="card-title"><b>Manufacturer:</b>@Html.DisplayFor(modelItem => item.ManufacturerName) </h5>
                    <h5 class="card-title"><b>Model:</b> @Html.DisplayFor(modelItem => item.Model)</h5>
                    <h5 class="card-title"><b>Year:</b> @Html.DisplayFor(modelItem => item.Year)</h5>
                    <h5 class="card-title"><b>Category:</b>@Html.DisplayFor(modelItem => item.CategoryName)</h5>
                    <h5 class="card-title"><b>Engine:</b>@Html.DisplayFor(modelItem => item.Engine)</h5>
                    <h5 class="card-title"><b>Loadcapacity:</b>@Html.DisplayFor(modelItem => item.Loadcapacity)</h5>
                    <h5 class="card-title"><b>Quantity:</b>@Html.DisplayFor(modelItem => item.Quantity)</h5>
                    <h5 class="card-title"><b>Price:</b>@Html.DisplayFor(modelItem => item.Price)</h5>
                    <h5 class="card-title"><b>Discount:</b>@Html.DisplayFor(modelItem => item.Discount)%</h5>
                    @if (this.User.Identity.IsAuthenticated)
                    {
                        <div class="d-flex justify-content-between align-items-center">
                            <div class="btn-group">
                                @await Html.PartialAsync("_OrderPartialView", new OrderConfirmVM
                        {
                        TruckId = item.Id
                        })
                            </div>
                        </div>
                    }
                </div>
                <div class="card-footer">
                    <div class="d-flex justify-content-between align-items-center">
                        @if ((this.User.Identity.IsAuthenticated) && (this.User.IsInRole("Administrator")))
                        {
                            <a asp-action="Edit" asp-route-id="@item.Id">Edit</a>
                        }
                        <a asp-action="Details" asp-route-id="@item.Id">Details</a>
                        @if ((this.User.Identity.IsAuthenticated) && (this.User.IsInRole("Administrator")))
                        {
                            <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                        }
                    </div>
                </div>
            </div>
        </div>
    }
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}